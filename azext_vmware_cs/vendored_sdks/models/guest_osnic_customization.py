# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GuestOSNICCustomization(Model):
    """Guest OS nic customization.

    :param allocation: IP address allocation method. Possible values include:
     'static', 'dynamic'
    :type allocation: str or ~azure.mgmt.vmwarecloudsimple.models.enum
    :param dns_servers: List of dns servers to use
    :type dns_servers: list[str]
    :param gateway: Gateway addresses assigned to nic
    :type gateway: list[str]
    :param ip_address: Static ip address for nic
    :type ip_address: str
    :param mask: Network mask for nic
    :type mask: str
    :param primary_wins_server: primary WINS server for Windows
    :type primary_wins_server: str
    :param secondary_wins_server: secondary WINS server for Windows
    :type secondary_wins_server: str
    """

    _attribute_map = {
        'allocation': {'key': 'allocation', 'type': 'str'},
        'dns_servers': {'key': 'dnsServers', 'type': '[str]'},
        'gateway': {'key': 'gateway', 'type': '[str]'},
        'ip_address': {'key': 'ipAddress', 'type': 'str'},
        'mask': {'key': 'mask', 'type': 'str'},
        'primary_wins_server': {'key': 'primaryWinsServer', 'type': 'str'},
        'secondary_wins_server': {'key': 'secondaryWinsServer', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(GuestOSNICCustomization, self).__init__(**kwargs)
        self.allocation = kwargs.get('allocation', None)
        self.dns_servers = kwargs.get('dns_servers', None)
        self.gateway = kwargs.get('gateway', None)
        self.ip_address = kwargs.get('ip_address', None)
        self.mask = kwargs.get('mask', None)
        self.primary_wins_server = kwargs.get('primary_wins_server', None)
        self.secondary_wins_server = kwargs.get('secondary_wins_server', None)
